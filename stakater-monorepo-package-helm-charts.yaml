---
# Source: stakater-push-main-tag-bitbucket/templates/task.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: stakater-monorepo-package-helm-charts
  labels:
    app.kubernetes.io/version: "0.0.0"
spec:
  params:
    - name: GIT_REVISION
      type: string
      description: The git revision
    - name: BITBUCKET_TOKEN
      type: string
      default: "git-auth"
      description: Secret that stores the Access Token and User Email for BitBucket
    - name: REPO_URL
      type: string
      description: URL of the repository.
    - name: CUSTOM_CA_CERT_PATH
      type: string
      default: ""
    - name: REGISTRY
      type: string
  steps:
    - args:
        - '-c'
        - >
          set -e

          if [ "${WORKSPACE_SSH_DIRECTORY_BOUND}" = "true" ] ; then
            cp -R "${WORKSPACE_SSH_DIRECTORY_PATH}" "${PARAM_USER_HOME}"/.ssh
            chmod 700 "${PARAM_USER_HOME}"/.ssh
            chmod -R 400 "${PARAM_USER_HOME}"/.ssh/*
          fi
          
          REPO_PATH=$(params.REPO_URL)

    
          git config --global --add safe.directory $(workspaces.source.path)

          if [[ "$(params.CUSTOM_CA_CERT_PATH)" != "" ]]; then
            git config http.sslCAInfo $(params.CUSTOM_CA_CERT_PATH)
          fi
          

          git config user.email ${GIT_EMAIL}

          # start by getting every file that has changed checking if the uppermost directory contains a helmchart
          git diff --name-only $(params.GIT_REVISION) $(params.GIT_REVISION)~1 | while read CHART
          do
              # check if file is Chart.Yaml
              if [ $(basename $CHART) == "Chart.yaml" ]; then

                  CHART_NAME=$(cat $CHART | awk -F "name: " 'NF>1{print $2 }')
                  CHART_VERSION=$(cat $CHART | awk -F "version: " 'NF>1{print $2 }')

                  CHART_TAG="$CHART_NAME-$CHART_VERSION"
                  CHART_DIR=$(dirname $CHART)
                  echo $CHART_TAG;
                  echo $CHART_DIR;


                  # check if git tag exists for chart. Should be {Chart.name-chart.version}
                  if [ git rev-parse ${TAG} >/dev/null 2>&1 ]; then
                      echo "chart version $TAG already exist, wont push helmchart ";
                      continue
                  fi

                  CHART_PACKAGE=$(helm package --version $CHART_VERSION -u $CHART_DIR | cut -d":" -f2 | tr -d '[:space:]')
                  echo $CHART_PACKAGE

                  if [ $(params.CUSTOM_CA_CERT_PATH) != "" ]; then
                      curl -u "${REG_USER}":"${REG_PASSWORD}" $(params.REGISTRY) --upload-file "$CHART_PACKAGE" --cacert $(params.CUSTOM_CA_CERT_PATH)
                  else
                      curl -u "${REG_USER}":"${REG_PASSWORD}" $(params.REGISTRY) --upload-file "$CHART_PACKAGE" 
                  fi

                  git tag -am "Bump version to $(CHART_TAG)" $(CHART_TAG)

              fi

          done

          git push --tags


      command:
        - /bin/bash
      env:
        - name: WORKSPACE_SSH_DIRECTORY_BOUND
          value: $(workspaces.ssh-directory.bound)
        - name: WORKSPACE_SSH_DIRECTORY_PATH
          value: $(workspaces.ssh-directory.path)
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: $(params.BITBUCKET_TOKEN)
              key: username
        - name: ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.BITBUCKET_TOKEN)
              key: token
        - name: GIT_EMAIL
          valueFrom:
            secretKeyRef:
              name: $(params.BITBUCKET_TOKEN)
              key: email
      image: 'stakater/pipeline-toolbox:v0.0.36'
      name: push-main-tag
      resources: {}
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
    - name: ssh-directory
      optional: true