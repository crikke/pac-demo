---
# Source: stakater-push-main-tag-bitbucket/templates/task.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: stakater-monorepo-package-helm-charts
  labels:
    app.kubernetes.io/version: "0.0.0"
spec:
  params:
    - name: GIT_EMAIL
      type: string
      default: "tekton@robot.com"
    - name: CUSTOM_CA_CERT_PATH
      type: string
      default: ""
    - name: REGISTRY
      type: string
    - name: HELM_REG_CREDS_SECRET_NAME
      description: Helm registry credentials secret name
      default: "helm-reg-creds"  
  steps:
    - args:
        - '-c'
        - >
          ln -s /tekton/creds/.ssh /root/.ssh;
          git config --global --add safe.directory $(workspaces.source.path);

          if [[ "$(params.CUSTOM_CA_CERT_PATH)" != "" ]]; then
            git config http.sslCAInfo $(params.CUSTOM_CA_CERT_PATH)
          fi
          
          git config user.email $(params.GIT_EMAIL);

          git diff-tree --no-commit-id HEAD --name-only -r | while read CHART;
          do
          
            if [ $(basename "$CHART") == "Chart.yaml" ]; then

              CHART_NAME=$(cat $CHART | awk -F "^name: " 'NF>1{print $2;exit; }')
              echo "chart name: $CHART_NAME"

              CHART_VERSION=$(cat $CHART | awk -F "^version: " 'NF>1{print $2;exit; }')
              echo "chart version: $CHART_VERSION"

              CHART_TAG="$CHART_NAME-$CHART_VERSION"
              echo "chart tag: $CHART_TAG"
              
              CHART_DIR=$(dirname $CHART)
              echo "chart dir: $CHART_DIR"
        
              if [ git rev-parse ${TAG} >/dev/null 2>&1 ]; then
                  echo "chart version $TAG already exist, wont push helmchart ";
                  continue
              fi

              CHART_PACKAGE=$(helm package --version $CHART_VERSION $CHART_DIR 2>&1);
              if [ $? -ne 0 ]; then
                  echo $CHART_PACKAGE >> error-list.txt;
                  continue;
              fi

              CHART_PACKAGE=$(echo "$CHART_PACKAGE" | cut -d":" -f2 | tr -d '[:space:]')

              echo "uploading $CHART_PACKAGE."

              if [ "$(params.CUSTOM_CA_CERT_PATH)" != "" ]; then
                  RESULT=$(curl -u "${REG_USER}":"${REG_PASSWORD}" $(params.REGISTRY) --upload-file "$CHART_PACKAGE" --cacert $(params.CUSTOM_CA_CERT_PATH))
              else
                  RESULT=$(curl -u "${REG_USER}":"${REG_PASSWORD}" $(params.REGISTRY) --upload-file "$CHART_PACKAGE")
              fi

              if [ $? -ne 0 ]; then
                echo $RESULT >> error-list.txt;
                continue;
              fi

              RESULT=$(git tag -am "Bump version to $CHART_TAG" "$CHART_TAG" 2>&1);
              
              if [ $? -ne 0 ]; then
                echo $RESULT >> error-list.txt;
                continue;
              fi
              
              echo "$CHART_NAME done uploading";
    
            fi

          done

          git push --tags;
          
          echo "done uploading charts to nexus.";
          
          if [ -s error-list.txt ]; then
            echo "errors occured when processing some charts";
            cat error-list.txt;
            exit 1;
          fi

      command:
        - /bin/bash
      env:
        - name: REG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(params.HELM_REG_CREDS_SECRET_NAME)
              key: password
              optional: true
        - name: REG_USER
          valueFrom:
            secretKeyRef:
              name: $(params.HELM_REG_CREDS_SECRET_NAME)  
              key: username
              optional: true
      image: 'stakater/pipeline-toolbox:v0.0.36'
      name: push-main-tag
      resources: {}
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
    - name: ssh-directory
      optional: true